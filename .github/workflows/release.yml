# Check https://github.com/changesets/action for more details

name: Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master


jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setting dependency cache
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          echo 'cache-hit is not true'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Create Release Pull Request or Publish to npm
        if: github.ref == 'refs/heads/master'
        id: changesets
        uses: ocavue/action@feat/outputs
        with:
          # this expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: yarn run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: published is true
        if: steps.changesets.outputs.published == 'true'
        # You can do something when a publish happens.
        run: echo 'published is true'

      - name: published is false
        if: steps.changesets.outputs.published == 'false'
        # You can do something when a publish happens.
        run: echo 'published is false'

      - name: published is not true
        if: steps.changesets.outputs.published != 'true'
        # You can do something when a publish happens.
        run: echo "published is $changeset_outputs_published"
        env:
          changeset_outputs_published: ${{ steps.changesets.outputs.published }}

      - name: published packages
        if: steps.changesets.outputs.published == 'true'
        # You can do something when a publish happens.
        run: echo "$changeset_outputs_published_packages"
        env:
          changeset_outputs_published_packages: ${{ steps.changesets.outputs.publishedPackages }}
